name: build

on:
  push:
    tags:
      - '*'

jobs:
  deploy_to_docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - kinesis
          - sqs
          - pubsub
          - kafka
          - nsq
          - stdout
    steps:
      - uses: actions/checkout@v2
      - uses: coursier/cache-action@v3
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Get current version
        id: ver
        run: |
          export PROJECT_VERSION=$(sbt "project core" version -Dsbt.log.noformat=true | perl -ne 'print "$1\n" if /info.*(\d+\.\d+\.\d+[^\r\n]*)/' | tail -n 1 | tr -d '\n')
          echo "::set-output name=project_version::$PROJECT_VERSION"

      - name: Stage the Docker build
        run: sbt "project ${{ matrix.platform}}" docker:stage

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: snowplow/scala-stream-collector-${{ matrix.platform }}
          tags: |
            type=raw,value=latest,enable=false
            type=raw,value=${{ steps.ver.outputs.project_version }}
          flavor: |
            latest=false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.platform }}/target/docker/stage
          file: ${{ matrix.platform }}/target/docker/stage/Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          push: true
